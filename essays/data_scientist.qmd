---
title: "My Growth as a Data Scientist"
format: html
editor: visual
---

I have improved as a data scientist in R in multiple ways throughout the quarter. One key area that I have improved in is learning various R syntax tools to make my code run more efficiently (in particular, implementing dplyr verbs were something I struggled with quite a bit when we first covered them). R is a language that I initially came into thinking that it would be similar to SAS in terms of user-friendliness. I quickly discovered, however, that it was actually a lot similar to Python (a language I struggle in.) R in turn proved to be very challenging for me to grasp throughout the quarter, and I had to work twice as hard as I normally did in my other statistics courses.

Dplyr verbs were tough for me to grasp at first because I had trouble understanding which function went where, the difference between a few of them, and what functions to use in general (if at all.) While it didn't make sense at first, I still continued to work hard and eventually, with lots of office hour help and practice, I felt more confident with those dplyr functions. An example of this improvement is in Lab work 9, where I needed to use a lot of these functions to create tables. I felt much more confident in my abilities to produce these tables using the dplyr tools, and I attribute this to a lot of time spent with the material and trying to understand how they work throughout the quarter. These verbs made my code run much more efficiently, and I felt I was able to understand them much more.

Another key area that I felt I grew in as a data scientist was tidiness of my code. I had habits of not structuring my code well before this class and at the beginning of the quarter, which not only made it difficult other people to understand my code, but for even myself to refer back to. I couldn't understand some of the things I did because of my untidiness. However, now that I am at the end of this 10-week journey in data science with R, I felt like my code has become much more tidy, and I've grown to understand what makes code 'tidy'.

An example that illustrates this is from my Lab 8, especially with the structure of my pluralize function. It had a lot of nested statements that, if I had done this in Week 1, would have all been on the same line and would probably have looked really messy and unreadable. However, I am proud of this function, because the function has a separate line for each major component, and is readable and clear as to what I am doing in it. This demonstrates that I have learned how to make code 'tidier' and that I understand the aspects of tidy code that I can use in my future of statistical computing as a data scientist.
